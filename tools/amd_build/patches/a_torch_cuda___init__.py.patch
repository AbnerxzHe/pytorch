diff --git a/tools/amd_build/patches/a_torch_cuda___init__.py.patch b/tools/amd_build/patches/a_torch_cuda___init__.py.patch
index 94c2d5926e..e69de29bb2 100644
--- a/tools/amd_build/patches/a_torch_cuda___init__.py.patch
+++ b/tools/amd_build/patches/a_torch_cuda___init__.py.patch
@@ -1,26 +0,0 @@
-diff --git a/torch/cuda/__init__.py b/torch/cuda/__init__.py
-index f52ab04f1..4e3f63c4b 100644
---- a/torch/cuda/__init__.py
-+++ b/torch/cuda/__init__.py
-@@ -123,7 +123,7 @@ def _lazy_call(callable):
-         # Don't store the actual traceback to avoid memory cycle
-         _queued_calls.append((callable, traceback.format_stack()))
- 
--_lazy_call(_check_capability)
-+#_lazy_call(_check_capability)
- 
- 
- class DeferredCudaCallError(Exception):
-@@ -159,9 +159,9 @@ def _lazy_init():
-             "Cannot re-initialize CUDA in forked subprocess. " + msg)
-     _check_driver()
-     torch._C._cuda_init()
--    _cudart = _load_cudart()
--    _cudart.cudaGetErrorName.restype = ctypes.c_char_p
--    _cudart.cudaGetErrorString.restype = ctypes.c_char_p
-+    # _cudart = _load_cudart()
-+    #_cudart.cudaGetErrorName.restype = ctypes.c_char_p
-+    #_cudart.cudaGetErrorString.restype = ctypes.c_char_p
-     _original_pid = os.getpid()
-     _initialized = True
-     # Important to do this after _initialized, since some queued calls
diff --git a/torch/cuda/__init__.py b/torch/cuda/__init__.py
index 8450f27812..1de27a5b0d 100644
--- a/torch/cuda/__init__.py
+++ b/torch/cuda/__init__.py
@@ -144,8 +144,6 @@ def _lazy_call(callable):
         # Don't store the actual traceback to avoid memory cycle
         _queued_calls.append((callable, traceback.format_stack()))
 
-_lazy_call(_check_capability)
-
 
 class DeferredCudaCallError(Exception):
     pass
@@ -191,9 +189,6 @@ def _lazy_init():
                 "Cannot re-initialize CUDA in forked subprocess. " + msg)
         _check_driver()
         torch._C._cuda_init()
-        _cudart = _load_cudart()
-        _cudart.cudaGetErrorName.restype = ctypes.c_char_p
-        _cudart.cudaGetErrorString.restype = ctypes.c_char_p
         _original_pid = os.getpid()
         # Some of the queued calls may reentrantly call _lazy_init();
         # we need to just return without initializing in that case.
